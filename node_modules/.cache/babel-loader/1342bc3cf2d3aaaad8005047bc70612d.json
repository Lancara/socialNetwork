{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lnc\\\\WebstormProjects\\\\untitled1\\\\src\\\\components\\\\Profile\\\\ProfileBossContainer.jsx\";\nimport React from 'react';\nimport ProfileContainer from \"./ProfileContainer\";\nimport { connect } from \"react-redux\";\nimport { getUsersProfile } from \"../../redux/profile-reducer\";\nimport { withRouter } from \"react-router-dom\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\"; //df\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProfileBossContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId; // метод позволяющий получить userId использ withRouter\n\n    if (!userId) {\n      userId = 2;\n    }\n\n    this.props.getUsersProfile(userId);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ProfileContainer, { ...this.props,\n        profile: this.props.profile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\ncompose(connect(mapStateToProps, {\n  getUsersProfile\n}), withRouter, withAuthRedirect)(ProfileContainer);\nlet AuthRedirectComponent = withAuthRedirect(ProfileBossContainer); // это хок\n\n_c = AuthRedirectComponent;\n\nlet mapStateToProps = state => ({\n  profile: state.profilePage.profile\n});\n\nlet WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\n_c2 = WithUrlDataContainerComponent;\nexport default connect(mapStateToProps, {\n  getUsersProfile\n})(WithUrlDataContainerComponent);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AuthRedirectComponent\");\n$RefreshReg$(_c2, \"WithUrlDataContainerComponent\");","map":{"version":3,"sources":["C:/Users/lnc/WebstormProjects/untitled1/src/components/Profile/ProfileBossContainer.jsx"],"names":["React","ProfileContainer","connect","getUsersProfile","withRouter","withAuthRedirect","compose","ProfileBossContainer","Component","componentDidMount","userId","props","match","params","render","profile","mapStateToProps","AuthRedirectComponent","state","profilePage","WithUrlDataContainerComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,eAAR,QAA8B,6BAA9B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,gBAAR,QAA+B,4BAA/B;AACA,SAAQC,OAAR,QAAsB,OAAtB,C,CAEA;;;;AACA,MAAMC,oBAAN,SAAoCP,KAAK,CAACQ,SAA1C,CAAmD;AAC/CC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,MAAM,GAAE,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAApC,CADgB,CAC4B;;AAC5C,QAAG,CAACA,MAAJ,EAAW;AACPA,MAAAA,MAAM,GAAG,CAAT;AACH;;AACD,SAAKC,KAAL,CAAWR,eAAX,CAA2BO,MAA3B;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI,QAAC,gBAAD,OAAsB,KAAKH,KAA3B;AAAkC,QAAA,OAAO,EAAE,KAAKA,KAAL,CAAWI;AAAtD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAf8C;;AAiBnDT,OAAO,CACHJ,OAAO,CAACc,eAAD,EAAkB;AAACb,EAAAA;AAAD,CAAlB,CADJ,EAEPC,UAFO,EAGPC,gBAHO,CAAP,CAIEJ,gBAJF;AAOA,IAAIgB,qBAAqB,GAAGZ,gBAAgB,CAACE,oBAAD,CAA5C,C,CAAmE;;KAA/DU,qB;;AAEJ,IAAID,eAAe,GAAIE,KAAD,KAAY;AACjCH,EAAAA,OAAO,EAAEG,KAAK,CAACC,WAAN,CAAkBJ;AADM,CAAZ,CAAtB;;AAIA,IAAIK,6BAA6B,GAAGhB,UAAU,CAACa,qBAAD,CAA9C;MAAIG,6B;AAEJ,eAAelB,OAAO,CAACc,eAAD,EAAkB;AAACb,EAAAA;AAAD,CAAlB,CAAP,CAA6CiB,6BAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport ProfileContainer from \"./ProfileContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUsersProfile} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n//df\r\nclass ProfileBossContainer extends  React.Component{\r\n    componentDidMount() {\r\n        let userId =this.props.match.params.userId; // метод позволяющий получить userId использ withRouter\r\n        if(!userId){\r\n            userId = 2;\r\n        }\r\n        this.props.getUsersProfile(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ProfileContainer {...this.props} profile={this.props.profile}/>\r\n            </div>\r\n        );\r\n    };\r\n}\r\ncompose(\r\n    connect(mapStateToProps, {getUsersProfile}),\r\nwithRouter,\r\nwithAuthRedirect,\r\n)(ProfileContainer)\r\n\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(ProfileBossContainer);// это хок\r\n\r\nlet mapStateToProps = (state) => ({\r\n profile: state.profilePage.profile,\r\n});\r\n\r\nlet WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n\r\nexport default connect(mapStateToProps, {getUsersProfile}) (WithUrlDataContainerComponent);"]},"metadata":{},"sourceType":"module"}