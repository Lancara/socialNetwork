{"ast":null,"code":"import React from'react';import{Field,reduxForm}from\"redux-form\";import{Input}from\"../Common/FormsControls/FormsControls\";import{required}from\"../../utils/validators/validators\";import{connect}from\"react-redux\";import{login}from\"../../redux/auth-reducer\";import{Redirect}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LoginForm=function LoginForm(props){return/*#__PURE__*/_jsxs(\"form\",{onSubmit:props.handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Field,{placeholder:\"Email\",name:\"email\",validate:[required],component:Input})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Field,{placeholder:\"Password\",name:\"password\",type:\"password\",validate:[required],component:Input})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Field,{component:Input,name:\"rememberMe\",type:\"checkbox\"}),\" remember me\"]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{children:\"login\"})})]});};var LoginReduxForm=reduxForm({form:'login'// уникальное строковое имя , что бі стейт различал разніе формі\n})(LoginForm);// вокруг чего обворачиваем\nvar Login=function Login(props){var onSubmit=function onSubmit(formData){//  в formData сидят методы из сабмита которые он получает из библиотеки редакс-форм мы их прокидываем дальше в нашу компоненту\nprops.login(formData.email,formData.password,formData.rememderMe);};if(props.isAuth){return/*#__PURE__*/_jsx(Redirect,{to:\"/profile\"});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"login\"}),/*#__PURE__*/_jsx(LoginReduxForm,{onSubmit:onSubmit})]});};var mapStateToProps=function mapStateToProps(state){return{isAuth:state.auth.isAuth};};export default connect(mapStateToProps,{login:login})(Login);","map":{"version":3,"sources":["C:/Users/lnc/WebstormProjects/untitled1/src/components/Login/Login.jsx"],"names":["React","Field","reduxForm","Input","required","connect","login","Redirect","LoginForm","props","handleSubmit","LoginReduxForm","form","Login","onSubmit","formData","email","password","rememderMe","isAuth","mapStateToProps","state","auth"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,KAAR,CAAeC,SAAf,KAA+B,YAA/B,CACA,OAAQC,KAAR,KAAoB,uCAApB,CACA,OAAQC,QAAR,KAAuB,mCAAvB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,KAAR,KAAoB,0BAApB,CACA,OAAQC,QAAR,KAAuB,kBAAvB,C,wFAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CACzB,mBACI,cAAM,QAAQ,CAAEA,KAAK,CAACC,YAAtB,wBACI,kCACI,KAAC,KAAD,EAAO,WAAW,CAAE,OAApB,CAA6B,IAAI,CAAE,OAAnC,CACO,QAAQ,CAAE,CAACN,QAAD,CADjB,CAEO,SAAS,CAAED,KAFlB,EADJ,EADJ,cAMI,kCACI,KAAC,KAAD,EAAO,WAAW,CAAE,UAApB,CAAgC,IAAI,CAAE,UAAtC,CAAkD,IAAI,CAAE,UAAxD,CACO,QAAQ,CAAE,CAACC,QAAD,CADjB,CAEO,SAAS,CAAED,KAFlB,EADJ,EANJ,cAWI,oCACI,KAAC,KAAD,EAAO,SAAS,CAAEA,KAAlB,CAAyB,IAAI,CAAE,YAA/B,CAA6C,IAAI,CAAE,UAAnD,EADJ,kBAXJ,cAeI,kCACI,iCADJ,EAfJ,GADJ,CAqBH,CAtBD,CAwBA,GAAMQ,CAAAA,cAAc,CAAGT,SAAS,CAAC,CAC7BU,IAAI,CAAE,OAAQ;AADe,CAAD,CAAT,CAEpBJ,SAFoB,CAAvB,CAEe;AAEf,GAAMK,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACJ,KAAD,CAAW,CACrB,GAAMK,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,QAAD,CAAc,CAAC;AAC5BN,KAAK,CAACH,KAAN,CAAYS,QAAQ,CAACC,KAArB,CAA4BD,QAAQ,CAACE,QAArC,CAA+CF,QAAQ,CAACG,UAAxD,EACH,CAFD,CAGA,GAAIT,KAAK,CAACU,MAAV,CAAkB,CACd,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAE,UAAd,EAAP,CACH,CACD,mBACI,oCACI,6BADJ,cAEI,KAAC,cAAD,EAAgB,QAAQ,CAAEL,QAA1B,EAFJ,GADJ,CAMH,CAbD,CAcA,GAAMM,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAChCF,MAAM,CAAEE,KAAK,CAACC,IAAN,CAAWH,MADa,CAAZ,EAAxB,CAGA,cAAed,CAAAA,OAAO,CAACe,eAAD,CAAkB,CAACd,KAAK,CAALA,KAAD,CAAlB,CAAP,CAAkCO,KAAlC,CAAf","sourcesContent":["import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../Common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Email\"} name={\"email\"}\r\n                       validate={[required]}\r\n                       component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"} name={\"password\"} type={\"password\"}\r\n                       validate={[required]}\r\n                       component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field component={Input} name={\"rememberMe\"} type={\"checkbox\"}/> remember me\r\n            </div>\r\n\r\n            <div>\r\n                <button>login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login' // уникальное строковое имя , что бі стейт различал разніе формі\r\n})(LoginForm); // вокруг чего обворачиваем\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {//  в formData сидят методы из сабмита которые он получает из библиотеки редакс-форм мы их прокидываем дальше в нашу компоненту\r\n        props.login(formData.email, formData.password, formData.rememderMe);\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, {login})(Login);"]},"metadata":{},"sourceType":"module"}