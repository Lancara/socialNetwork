{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nlet initialState = {\n  users: [],\n  pageSize: 100,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: false,\n  followingInProgres\n};\n\nconst usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        // создаем копию стейта\n        users: state.users.map(u => {\n          // делам копию users и спомощью меп создаем по одному элементу и\n          if (u.id === action.userID) {\n            // заходим внутирь , если id совпадает с id из екшин то меняем followed\n            return { ...u,\n              followed: true\n            }; // и добавляем измененный(скопированній) элемент в наш   массив,\n          } // если id не совпадает то возращаем элемент без изменений\n\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userID) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      {\n        return { ...state,\n          users: action.users\n        };\n      }\n\n    case SET_CURRENT_PAGE:\n      {\n        return { ...state,\n          currentPage: action.currentPage\n        };\n      }\n\n    case SET_TOTAL_USERS_COUNT:\n      {\n        return { ...state,\n          totalUsersCount: action.count\n        };\n      }\n\n    case TOGGLE_IS_FETCHING:\n      {\n        return { ...state,\n          isFetching: action.isFetching\n        };\n      }\n  }\n\n  return state;\n};\n\nexport const follow = userID => ({\n  type: FOLLOW,\n  userID\n});\nexport const unfollow = userID => ({\n  type: UNFOLLOW,\n  userID\n});\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalUsersCount = totalUsersCount => ({\n  type: SET_TOTAL_USERS_COUNT,\n  count: totalUsersCount\n});\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport default usersReducer;","map":{"version":3,"sources":["C:/Users/lnc/WebstormProjects/untitled1/src/redux/users-reducer.js"],"names":["FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgres","usersReducer","state","action","type","map","u","id","userID","followed","count","follow","unfollow","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching"],"mappings":"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","sourcesContent":["const FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 100,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgres\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,                             // создаем копию стейта\r\n                users: state.users.map(u => {         // делам копию users и спомощью меп создаем по одному элементу и\r\n                    if (u.id === action.userID) {     // заходим внутирь , если id совпадает с id из екшин то меняем followed\r\n                        return {...u, followed: true} // и добавляем измененный(скопированній) элемент в наш   массив,\r\n                    }                                 // если id не совпадает то возращаем элемент без изменений\r\n                    return u;\r\n                })\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\nexport const follow = (userID) => ({type: FOLLOW, userID})\r\nexport const unfollow = (userID) => ({type: UNFOLLOW, userID})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\n\r\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}