{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lnc\\\\WebstormProjects\\\\untitled1\\\\src\\\\components\\\\Profile\\\\ProfileBossContainer.jsx\";\nimport React from 'react';\nimport ProfileContainer from \"./ProfileContainer\";\nimport { connect } from \"react-redux\";\nimport { getStatus, getUsersProfile, updateStatus } from \"../../redux/profile-reducer\";\nimport { withRouter } from \"react-router-dom\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProfileBossContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId; // метод позволяющий получить userId использ withRouter\n\n    if (!userId) {\n      userId = 2;\n    }\n\n    this.props.getUsersProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ProfileContainer, { ...this.props,\n        profile: this.props.profile,\n        status: this.props.status,\n        updateStatus: this.props.updateStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nlet mapStateToProps = state => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status\n});\n\nexport default compose(connect(mapStateToProps, {\n  getUsersProfile,\n  getStatus,\n  updateStatus\n}), withRouter)(ProfileBossContainer);\n/*\r\nlet AuthRedirectComponent = withAuthRedirect(ProfileBossContainer);// это хок\r\nlet WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\nexport default connect(mapStateToProps, {getUsersProfile}) (WithUrlDataContainerComponent);*/","map":{"version":3,"sources":["C:/Users/lnc/WebstormProjects/untitled1/src/components/Profile/ProfileBossContainer.jsx"],"names":["React","ProfileContainer","connect","getStatus","getUsersProfile","updateStatus","withRouter","withAuthRedirect","compose","ProfileBossContainer","Component","componentDidMount","userId","props","match","params","render","profile","status","mapStateToProps","state","profilePage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,EAAmBC,eAAnB,EAAoCC,YAApC,QAAuD,6BAAvD;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,gBAAR,QAA+B,4BAA/B;AACA,SAAQC,OAAR,QAAsB,OAAtB;;;AAEA,MAAMC,oBAAN,SAAmCT,KAAK,CAACU,SAAzC,CAAmD;AAC/CC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC,CADgB,CAC6B;;AAC7C,QAAI,CAACA,MAAL,EAAa;AACTA,MAAAA,MAAM,GAAG,CAAT;AACH;;AACD,SAAKC,KAAL,CAAWT,eAAX,CAA2BQ,MAA3B;AACA,SAAKC,KAAL,CAAWV,SAAX,CAAqBS,MAArB;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI,QAAC,gBAAD,OAAsB,KAAKH,KAA3B;AAAkC,QAAA,OAAO,EAAE,KAAKA,KAAL,CAAWI,OAAtD;AAA+D,QAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWK,MAAlF;AAA0F,QAAA,YAAY,EAAE,KAAKL,KAAL,CAAWR;AAAnH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAhB8C;;AAmBnD,IAAIc,eAAe,GAAIC,KAAD,KAAY;AAC9BH,EAAAA,OAAO,EAAEG,KAAK,CAACC,WAAN,CAAkBJ,OADG;AAE9BC,EAAAA,MAAM,EAACE,KAAK,CAACC,WAAN,CAAkBH;AAFK,CAAZ,CAAtB;;AAKA,eAAeV,OAAO,CAClBN,OAAO,CAACiB,eAAD,EAAkB;AAACf,EAAAA,eAAD;AAAkBD,EAAAA,SAAlB;AAA6BE,EAAAA;AAA7B,CAAlB,CADW,EAElBC,UAFkB,CAAP,CAGTG,oBAHS,CAAf;AAMA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport ProfileContainer from \"./ProfileContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUsersProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileBossContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId; // метод позволяющий получить userId использ withRouter\r\n        if (!userId) {\r\n            userId = 2;\r\n        }\r\n        this.props.getUsersProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ProfileContainer {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status:state.profilePage.status,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUsersProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    )(ProfileBossContainer)\r\n\r\n\r\n/*\r\nlet AuthRedirectComponent = withAuthRedirect(ProfileBossContainer);// это хок\r\nlet WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\nexport default connect(mapStateToProps, {getUsersProfile}) (WithUrlDataContainerComponent);*/\r\n"]},"metadata":{},"sourceType":"module"}