{"ast":null,"code":"import axios from \"axios\";\nimport { savePhoto, saveProfile } from \"../redux/profile-reducer\";\nconst instance = axios.create({\n  // что бы сделать instance нужно исп axios.create ( instance это экземпляр axios)\n  withCredentials: true,\n  // благодаря withCredentials кука цепляется и сайт понимает кто мы\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  headers: {\n    \"API-KEY\": \"7300fadf-18dd-428e-9d99-dcbb08c65b81\"\n  }\n});\nexport const userAPI = {\n  getUsers() {\n    let currentPage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let pageSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`, {}).then(response => {\n      // приходит response и мы из этого response берем data\n      return response.data;\n    });\n  },\n\n  follow(userId) {\n    return instance.post(`follow/${userId}`);\n  },\n\n  unfollow(userId) {\n    return instance.delete(`follow/${userId}`);\n  },\n\n  getProfile(userId) {\n    console.warn('obsolete method, please profileAPI obj ');\n    return profileAPI.getProfile(userId);\n  }\n\n};\nexport const profileAPI = {\n  getProfile(userId) {\n    return instance.get(`profile/` + userId);\n  },\n\n  getStatus(userId) {\n    return instance.get(`profile/status/` + userId);\n  },\n\n  updateStatus(status) {\n    return instance.put(`profile/status`, {\n      status: status\n    });\n  },\n\n  savePhoto(photoFile) {\n    const formData = new FormData();\n    formData.append(\"image\", photoFile);\n    return instance.put(`profile/photo`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n\n  saveProfile(profile) {\n    return instance.put(`profile`, profile);\n  }\n\n};\nexport const authAPI = {\n  me() {\n    return instance.get(`auth/me`);\n  },\n\n  login(email, password) {\n    let rememderMe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    // приходят єти данные и мы отправляем их на сервер\n    return instance.post(`/auth/login`, {\n      email,\n      password,\n      rememderMe\n    });\n  },\n\n  logout() {\n    // delete должно без параметров\n    return instance.delete(`/auth/login`);\n  }\n\n};\nexport const securityAPI = {\n  getCaptchaUrl() {\n    return instance.get(`auth/me`);\n  },\n\n  login(email, password) {\n    let rememderMe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    // приходят єти данные и мы отправляем их на сервер\n    return instance.post(`/auth/login`, {\n      email,\n      password,\n      rememderMe\n    });\n  },\n\n  logout() {\n    // delete должно без параметров\n    return instance.delete(`/auth/login`);\n  }\n\n};","map":{"version":3,"sources":["C:/Users/lnc/WebstormProjects/untitled1/src/api/api.js"],"names":["axios","savePhoto","saveProfile","instance","create","withCredentials","baseURL","headers","userAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","photoFile","formData","FormData","append","profile","authAPI","me","login","email","password","rememderMe","logout","securityAPI","getCaptchaUrl"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {savePhoto, saveProfile} from \"../redux/profile-reducer\";\r\n\r\nconst instance = axios.create({ // что бы сделать instance нужно исп axios.create ( instance это экземпляр axios)\r\n    withCredentials: true, // благодаря withCredentials кука цепляется и сайт понимает кто мы\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"7300fadf-18dd-428e-9d99-dcbb08c65b81\"\r\n    }\r\n});\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`, {})\r\n            .then(response => { // приходит response и мы из этого response берем data\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('obsolete method, please profileAPI obj ')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n\r\n}\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status});\r\n    },\r\n    savePhoto(photoFile){\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile){\r\n        return instance.put(`profile`, profile);\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`, );\r\n    },\r\n    login(email, password, rememderMe = false) { // приходят єти данные и мы отправляем их на сервер\r\n        return instance.post(`/auth/login`, {email, password, rememderMe} );\r\n    },\r\n    logout() { // delete должно без параметров\r\n        return instance.delete(`/auth/login`);\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`auth/me`, );\r\n    },\r\n    login(email, password, rememderMe = false) { // приходят єти данные и мы отправляем их на сервер\r\n        return instance.post(`/auth/login`, {email, password, rememderMe} );\r\n    },\r\n    logout() { // delete должно без параметров\r\n        return instance.delete(`/auth/login`);\r\n    }\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}