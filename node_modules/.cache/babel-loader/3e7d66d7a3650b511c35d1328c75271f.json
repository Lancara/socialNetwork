{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lnc\\\\WebstormProjects\\\\untitled1\\\\src\\\\components\\\\Users\\\\UsersContainer.jsx\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching, toggleFollowingProgress, getUsersThunkCreator } from \"../../redux/users-reducer\";\nimport axios from \"axios\";\nimport Users from \"./users\";\nimport Infinity from '../Common/Infinity/Infinity';\nimport { userAPI } from \"../../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UsersContainer extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.onPageChanged = pageNumber => {\n      this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize);\n      this.props.setCurrentPage(pageNumber);\n      this.props.toggleIsFetching(true);\n      userAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\n        this.props.setUsers(data.items);\n        this.props.toggleIsFetching(false);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Infinity, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 38\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        onPageChanged: this.onPageChanged,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow,\n        users: this.props.users,\n        toggleFollowingProgress: this.props.toggleFollowingProgress,\n        followingInProgress: this.props.followingInProgress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching,\n    followingInProgress: state.usersPage.followingInProgress\n  };\n};\n/*let mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        follow: (userID) => {\r\n            dispatch(followAC(userID));\r\n        },\r\n        unfollow: (userID) => {\r\n            dispatch(unfollowAC(userID));\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users));\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPageAC(pageNumber))\r\n        },\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(setUsersTotalCountAC(totalCount))\r\n        },\r\n        toggleIsFetching: (isFetching) => {\r\n            dispatch(toggleIsFetchingAC(isFetching))\r\n        }\r\n    }\r\n}*/\n\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalUsersCount,\n  toggleIsFetching,\n  toggleFollowingProgress,\n  getUsersThunkCreator\n})(UsersContainer);","map":{"version":3,"sources":["C:/Users/lnc/WebstormProjects/untitled1/src/components/Users/UsersContainer.jsx"],"names":["React","connect","follow","unfollow","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress","getUsersThunkCreator","axios","Users","Infinity","userAPI","UsersContainer","Component","onPageChanged","pageNumber","props","currentPage","pageSize","getUsers","then","data","items","componentDidMount","render","isFetching","totalUsersCount","users","followingInProgress","mapStateToProps","state","usersPage"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    setUsers,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    toggleIsFetching, toggleFollowingProgress, getUsersThunkCreator\r\n} from \"../../redux/users-reducer\";\r\nimport axios from \"axios\";\r\nimport Users from \"./users\";\r\nimport Infinity from '../Common/Infinity/Infinity';\r\nimport {userAPI} from \"../../api/api\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n\r\n        this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize);\r\n\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.toggleIsFetching(true);\r\n\r\n        userAPI.getUsers(pageNumber,\r\n            this.props.pageSize)\r\n            .then(data => {\r\n                this.props.setUsers(data.items);\r\n                this.props.toggleIsFetching(false);\r\n\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Infinity/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   users={this.props.users}\r\n                   toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                   followingInProgress={this.props.followingInProgress}\r\n\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n    }\r\n}\r\n\r\n/*let mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        follow: (userID) => {\r\n            dispatch(followAC(userID));\r\n        },\r\n        unfollow: (userID) => {\r\n            dispatch(unfollowAC(userID));\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users));\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPageAC(pageNumber))\r\n        },\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(setUsersTotalCountAC(totalCount))\r\n        },\r\n        toggleIsFetching: (isFetching) => {\r\n            dispatch(toggleIsFetchingAC(isFetching))\r\n        }\r\n    }\r\n}*/\r\n\r\nexport default connect(mapStateToProps, {\r\n    follow, unfollow, setUsers,\r\n    setCurrentPage, setTotalUsersCount, toggleIsFetching,\r\n    toggleFollowingProgress, getUsersThunkCreator,\r\n})(UsersContainer);"]},"metadata":{},"sourceType":"module"}