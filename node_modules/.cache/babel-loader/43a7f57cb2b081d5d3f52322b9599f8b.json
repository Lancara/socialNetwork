{"ast":null,"code":"const ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nlet initialState = {\n  posts: [{\n    id: 1,\n    message: 'hi'\n  }, {\n    id: 2,\n    message: 'ho'\n  }],\n  newPostText: ' re'\n};\n\nconst ProfileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          id: 3,\n          message: state.newPostText\n        };\n        let stateCopy = { ...state,\n          // сщздоем stateCopy и копируем в него  state (поверхносно)\n          newPostText: '',\n          //затираем\n          posts: [...state.posts, newPost] //создоем новый массив и забираем элементы с помощю ... из старого и добавляем нью пост\n\n        };\n        /*let stateCopy = {...state};*/\n\n        /*stateCopy.posts = [...state.posts];*/\n\n        /*stateCopy.posts.push(newPost);*/\n\n        /*stateCopy.newPostText = ''*/\n\n        return stateCopy;\n      }\n\n    case UPDATE_NEW_POST_TEXT:\n      {\n        let stateCopy = { ...state,\n          newPostText: action.newText\n        };\n        /*stateCopy.newPostText = action.newText;*/\n\n        return stateCopy;\n      }\n  }\n\n  return state;\n};\n\n_c = ProfileReducer;\nexport const addPostActionCreator = () => {\n  return {\n    type: ADD_POST\n  };\n};\nexport const updateNewPostTextActionCreator = text => {\n  return {\n    type: UPDATE_NEW_POST_TEXT,\n    newText: text\n  };\n};\nexport default ProfileReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileReducer\");","map":{"version":3,"sources":["C:/Users/lnc/WebstormProjects/untitled1/src/redux/profile-reducer.js"],"names":["ADD_POST","UPDATE_NEW_POST_TEXT","initialState","posts","id","message","newPostText","ProfileReducer","state","action","type","newPost","stateCopy","newText","addPostActionCreator","updateNewPostTextActionCreator","text"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,UAAjB;AACA,MAAMC,oBAAoB,GAAG,sBAA7B;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,KAAK,EAAE,CACH;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,OAAO,EAAE;AAAjB,GADG,EAEH;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,OAAO,EAAE;AAAjB,GAFG,CADQ;AAKfC,EAAAA,WAAW,EAAE;AALE,CAAnB;;AAQC,MAAMC,cAAc,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AAErD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,QAAL;AAAe;AACX,YAAIW,OAAO,GAAG;AACVP,UAAAA,EAAE,EAAE,CADM;AAEVC,UAAAA,OAAO,EAAEG,KAAK,CAACF;AAFL,SAAd;AAKA,YAAIM,SAAS,GAAG,EACZ,GAAGJ,KADS;AACH;AACTF,UAAAA,WAAW,EAAE,EAFD;AAEI;AAChBH,UAAAA,KAAK,EAAE,CAAC,GAAGK,KAAK,CAACL,KAAV,EAAiBQ,OAAjB,CAHK,CAGoB;;AAHpB,SAAhB;AAKA;;AACA;;AACA;;AACA;;AACA,eAAOC,SAAP;AACH;;AACD,SAAKX,oBAAL;AAA2B;AACvB,YAAIW,SAAS,GAAG,EACZ,GAAGJ,KADS;AAEZF,UAAAA,WAAW,EAACG,MAAM,CAACI;AAFP,SAAhB;AAIA;;AACA,eAAOD,SAAP;AACC;AAzBT;;AA2BA,SAAOJ,KAAP;AACJ,CA9BA;;KAAMD,c;AAgCP,OAAO,MAAMO,oBAAoB,GAAG,MAAM;AACtC,SAAO;AACHJ,IAAAA,IAAI,EAAEV;AADH,GAAP;AAGH,CAJM;AAKP,OAAO,MAAMe,8BAA8B,GAAIC,IAAD,IAAU;AACpD,SAAO;AAACN,IAAAA,IAAI,EAAET,oBAAP;AAA6BY,IAAAA,OAAO,EAAEG;AAAtC,GAAP;AACH,CAFM;AAIP,eAAeT,cAAf","sourcesContent":["const ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'hi'},\r\n        {id: 2, message: 'ho'}\r\n    ],\r\n    newPostText: ' re'\r\n};\r\n\r\n const ProfileReducer = (state = initialState, action) => {\r\n\r\n     switch (action.type) {\r\n         case ADD_POST: {\r\n             let newPost = {\r\n                 id: 3,\r\n                 message: state.newPostText,\r\n             };\r\n\r\n             let stateCopy = {\r\n                 ...state,// сщздоем stateCopy и копируем в него  state (поверхносно)\r\n                 newPostText: '',//затираем\r\n                 posts: [...state.posts, newPost]//создоем новый массив и забираем элементы с помощю ... из старого и добавляем нью пост\r\n             };\r\n             /*let stateCopy = {...state};*/\r\n             /*stateCopy.posts = [...state.posts];*/\r\n             /*stateCopy.posts.push(newPost);*/\r\n             /*stateCopy.newPostText = ''*/\r\n             return stateCopy;\r\n         }\r\n         case UPDATE_NEW_POST_TEXT: {\r\n             let stateCopy = {\r\n                 ...state,\r\n                 newPostText:action.newText,\r\n             };\r\n             /*stateCopy.newPostText = action.newText;*/\r\n             return stateCopy;\r\n             }\r\n     }\r\n     return state;\r\n}\r\n\r\nexport const addPostActionCreator = () => {\r\n    return {\r\n        type: ADD_POST\r\n    }\r\n}\r\nexport const updateNewPostTextActionCreator = (text) => {\r\n    return {type: UPDATE_NEW_POST_TEXT, newText: text}\r\n}\r\n\r\nexport default ProfileReducer;"]},"metadata":{},"sourceType":"module"}