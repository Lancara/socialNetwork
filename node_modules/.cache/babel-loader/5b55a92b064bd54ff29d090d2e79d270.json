{"ast":null,"code":"const SEND_CAR = 'SEND_CAR';\nconst UPDATE_NEW_MESSAGE_CAR = 'UPDATE_NEW_MESSAGE_CAR';\nlet initialState = {\n  messagesCar: [{\n    id: 1,\n    message: 'BMW'\n  }],\n  newPostCar: ' '\n};\n\nconst CarReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  /*     switch (action.type) {\r\n           case SEND_CAR: {\r\n               let newMessagesCar = {\r\n                   id: 2,\r\n                   message: state.newPostCar,\r\n               };\r\n               let stateCopyCar = {...state};\r\n               stateCopyCar.messagesCar = [...state.messagesCar];\r\n               stateCopyCar.messagesCar.push(newMessagesCar);\r\n               stateCopyCar.newPostCar = ''\r\n               return stateCopyCar;\r\n           }\r\n           case UPDATE_NEW_MESSAGE_CAR: {\r\n               let stateCopyCar = {...state};\r\n               stateCopyCar.newPostCar = action.newCar;\r\n               return stateCopyCar;\r\n           }\r\n       }\r\n       return state;\r\n  }*/\n  switch (action.type) {\n    case SEND_CAR:\n      return { ...state,\n        newPostCar: '',\n        messagesCar: [...state.messagesCar, {\n          id: 2,\n          message: state.newPostCar\n        }]\n      };\n\n    case UPDATE_NEW_MESSAGE_CAR:\n      return { ...state,\n        newPostCar: action.newCar\n      };\n  }\n\n  return state;\n};\n\n_c = CarReducer;\nexport const addPostCarCreator = () => {\n  return {\n    type: SEND_CAR\n  };\n};\nexport const updateNewPostTextCarCreator = newCar => {\n  return {\n    type: UPDATE_NEW_MESSAGE_CAR,\n    newCar: newCar\n  };\n};\nexport default CarReducer;\nlet hereIsAnArray = [1, 5, 9];\nlet hereIsAnotherOne = [3, 5, 2];\nlet wowSoMuchArrays = [8, 7, 5];\nlet pleaseStop = [5, 2, 0];\nlet whyAreYouDoingThis = [2, 1, 5];\n\nfor (var i = 0; i < hereIsAnArray.length; i++) {\n  //проходимся по первому масиву\n  for (var j = 0; j < hereIsAnotherOne.length; j++) {\n    // ищем соотвествия во втором массиве\n    if (hereIsAnArray[i] === hereIsAnotherOne[j]) {\n      for (var k = 0; k < wowSoMuchArrays.length; k++) {\n        //\n        if (i === wowSoMuchArrays[k]) for (var p = 0; p < pleaseStop.length; p++) {\n          //\n          if (i === pleaseStop[p]) {\n            for (var d = 0; d < whyAreYouDoingThis.length; d++) {\n              //\n              if (i === whyAreYouDoingThis[d]) {\n                console.log(hereIsAnArray[i]);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"CarReducer\");","map":{"version":3,"sources":["C:/Users/lnc/WebstormProjects/untitled1/src/redux/car-reducer.js"],"names":["SEND_CAR","UPDATE_NEW_MESSAGE_CAR","initialState","messagesCar","id","message","newPostCar","CarReducer","state","action","type","newCar","addPostCarCreator","updateNewPostTextCarCreator","hereIsAnArray","hereIsAnotherOne","wowSoMuchArrays","pleaseStop","whyAreYouDoingThis","i","length","j","k","p","d","console","log"],"mappings":"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","sourcesContent":["const SEND_CAR = 'SEND_CAR';\r\nconst UPDATE_NEW_MESSAGE_CAR = 'UPDATE_NEW_MESSAGE_CAR';\r\n\r\nlet initialState = {\r\n    messagesCar: [\r\n        {id: 1, message: 'BMW'},\r\n    ],\r\n    newPostCar: ' '\r\n};\r\nconst CarReducer = (state = initialState, action) => {\r\n    /*     switch (action.type) {\r\n             case SEND_CAR: {\r\n                 let newMessagesCar = {\r\n                     id: 2,\r\n                     message: state.newPostCar,\r\n                 };\r\n                 let stateCopyCar = {...state};\r\n                 stateCopyCar.messagesCar = [...state.messagesCar];\r\n                 stateCopyCar.messagesCar.push(newMessagesCar);\r\n                 stateCopyCar.newPostCar = ''\r\n                 return stateCopyCar;\r\n             }\r\n             case UPDATE_NEW_MESSAGE_CAR: {\r\n                 let stateCopyCar = {...state};\r\n                 stateCopyCar.newPostCar = action.newCar;\r\n                 return stateCopyCar;\r\n             }\r\n         }\r\n         return state;\r\n    }*/\r\n\r\n    switch (action.type) {\r\n        case SEND_CAR:\r\n            return {\r\n                ...state,\r\n                newPostCar: '',\r\n                messagesCar: [...state.messagesCar, {id: 2, message: state.newPostCar}]\r\n            }\r\n        case UPDATE_NEW_MESSAGE_CAR:\r\n            return {\r\n                ...state,\r\n                newPostCar: action.newCar,\r\n            }\r\n    }\r\n    return state;\r\n}\r\n\r\n\r\nexport const addPostCarCreator = () => {\r\n    return {\r\n        type: SEND_CAR\r\n    }\r\n}\r\nexport const updateNewPostTextCarCreator = (newCar) => {\r\n    return {type: UPDATE_NEW_MESSAGE_CAR, newCar: newCar}\r\n}\r\nexport default CarReducer;\r\n\r\nlet hereIsAnArray = [1, 5, 9];\r\nlet hereIsAnotherOne = [3, 5, 2];\r\nlet wowSoMuchArrays = [8, 7, 5];\r\nlet pleaseStop = [5, 2, 0];\r\nlet whyAreYouDoingThis = [2, 1, 5]\r\n\r\nfor (var i = 0; i < hereIsAnArray.length; i++) { //проходимся по первому масиву\r\n    for (var j = 0; j< hereIsAnotherOne.length; j++) { // ищем соотвествия во втором массиве\r\n        if(hereIsAnArray[i] === hereIsAnotherOne[j]){\r\n            for (var k = 0; k< wowSoMuchArrays.length; k++) { //\r\n                if(i === wowSoMuchArrays[k])\r\n                    for (var p = 0; p< pleaseStop.length; p++) { //\r\n                        if(i === pleaseStop[p]){\r\n                            for (var d = 0; d< whyAreYouDoingThis.length; d++) { //\r\n                                if(i === whyAreYouDoingThis[d]){\r\n                                    console.log(hereIsAnArray[i]);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n            }\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}