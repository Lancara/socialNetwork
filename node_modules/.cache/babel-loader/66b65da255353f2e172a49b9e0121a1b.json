{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lnc\\\\WebstormProjects\\\\untitled1\\\\src\\\\components\\\\Profile\\\\ProfileBossContainer.jsx\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { getStatus, getUsersProfile, updateStatus } from \"../../redux/profile-reducer\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport ProfileObert from \"./ProfileObert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProfileBossContainer extends React.Component {\n  refreshProfile() {\n    let userId = this.props.match.params.userId; // метод позволяющий получить userId использ withRouter\n\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n\n      if (!userId) {\n        this.props.history.push(\"login\"); // history.push позволяет перебрасивать на другую страницу\n      }\n    }\n\n    this.props.getUsersProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\n      this.refreshProfile();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ProfileObert, { ...this.props,\n        isOwner: !!this.props.match.params.userId,\n        profile: this.props.profile,\n        status: this.props.status,\n        updateStatus: this.props.updateStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nlet mapStateToProps = state => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.id,\n  isAuth: state.auth.isAuth\n});\n\nexport default compose(connect(mapStateToProps, {\n  getUsersProfile,\n  getStatus,\n  updateStatus\n}), withRouter)(ProfileBossContainer);\n/*\r\nlet AuthRedirectComponent = withAuthRedirect(ProfileBossContainer);// это хок\r\nlet WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\nexport default connect(mapStateToProps, {getUsersProfile}) (WithUrlDataContainerComponent);*/","map":{"version":3,"sources":["C:/Users/lnc/WebstormProjects/untitled1/src/components/Profile/ProfileBossContainer.jsx"],"names":["React","connect","getStatus","getUsersProfile","updateStatus","withRouter","compose","ProfileObert","ProfileBossContainer","Component","refreshProfile","userId","props","match","params","authorizedUserId","history","push","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render","profile","status","mapStateToProps","state","profilePage","auth","id","isAuth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,EAAmBC,eAAnB,EAAoCC,YAApC,QAAuD,6BAAvD;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,oBAAN,SAAmCR,KAAK,CAACS,SAAzC,CAAmD;AAE/CC,EAAAA,cAAc,GAAG;AACb,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC,CADa,CACgC;;AAC7C,QAAI,CAACA,MAAL,EAAa;AACTA,MAAAA,MAAM,GAAG,KAAKC,KAAL,CAAWG,gBAApB;;AACA,UAAI,CAACJ,MAAL,EAAa;AACT,aAAKC,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,OAAxB,EADS,CACyB;AACrC;AACJ;;AACD,SAAKL,KAAL,CAAWT,eAAX,CAA2BQ,MAA3B;AACA,SAAKC,KAAL,CAAWV,SAAX,CAAqBS,MAArB;AACH;;AAEDO,EAAAA,iBAAiB,GAAG;AAChB,SAAKR,cAAL;AACH;;AAEDS,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAC/C,QAAI,KAAKV,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAAxB,IAAkCS,SAAS,CAACP,KAAV,CAAgBC,MAAhB,CAAuBH,MAA7D,EAAqE;AACjE,WAAKD,cAAL;AACH;AACJ;;AAEDa,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI,QAAC,YAAD,OAAkB,KAAKX,KAAvB;AACI,QAAA,OAAO,EAAE,CAAC,CAAC,KAAKA,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MADvC;AAEc,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWY,OAFlC;AAGc,QAAA,MAAM,EAAE,KAAKZ,KAAL,CAAWa,MAHjC;AAIc,QAAA,YAAY,EAAE,KAAKb,KAAL,CAAWR;AAJvC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAlC8C;;AAqCnD,IAAIsB,eAAe,GAAIC,KAAD,KAAY;AAC9BH,EAAAA,OAAO,EAAEG,KAAK,CAACC,WAAN,CAAkBJ,OADG;AAE9BC,EAAAA,MAAM,EAAEE,KAAK,CAACC,WAAN,CAAkBH,MAFI;AAG9BV,EAAAA,gBAAgB,EAAEY,KAAK,CAACE,IAAN,CAAWC,EAHC;AAI9BC,EAAAA,MAAM,EAAEJ,KAAK,CAACE,IAAN,CAAWE;AAJW,CAAZ,CAAtB;;AAOA,eAAezB,OAAO,CAClBL,OAAO,CAACyB,eAAD,EAAkB;AAACvB,EAAAA,eAAD;AAAkBD,EAAAA,SAAlB;AAA6BE,EAAAA;AAA7B,CAAlB,CADW,EAElBC,UAFkB,CAAP,CAGbG,oBAHa,CAAf;AAMA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUsersProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport ProfileObert from \"./ProfileObert\";\r\n\r\nclass ProfileBossContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId; // метод позволяющий получить userId использ withRouter\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"login\"); // history.push позволяет перебрасивать на другую страницу\r\n            }\r\n        }\r\n        this.props.getUsersProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ProfileObert {...this.props}\r\n                    isOwner={!!this.props.match.params.userId}\r\n                              profile={this.props.profile}\r\n                              status={this.props.status}\r\n                              updateStatus={this.props.updateStatus}/>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUsersProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n)(ProfileBossContainer)\r\n\r\n\r\n/*\r\nlet AuthRedirectComponent = withAuthRedirect(ProfileBossContainer);// это хок\r\nlet WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\nexport default connect(mapStateToProps, {getUsersProfile}) (WithUrlDataContainerComponent);*/\r\n"]},"metadata":{},"sourceType":"module"}