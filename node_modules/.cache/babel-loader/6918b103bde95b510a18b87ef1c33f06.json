{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\lnc\\\\WebstormProjects\\\\untitled1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";import _objectSpread from\"C:\\\\Users\\\\lnc\\\\WebstormProjects\\\\untitled1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import{profileAPI,userAPI}from\"../api/api\";var ADD_POST='ADD-POST';var SET_USER_PROFILE='SET_USER_PROFILE';var SET_STATUS='SET_STATUS';var DELETE_POST='DELETE_POST';var initialState={posts:[{id:1,message:'hi'},{id:2,message:'ho'}],profile:null,status:''};var ProfileReducer=function ProfileReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ADD_POST:return _objectSpread(_objectSpread({},state),{},{// создоем stateCopy и копируем в него  state (поверхносно)\nnewPostText:'',//затираем\nposts:[].concat(_toConsumableArray(state.posts),[{id:3,message:action.newPostText}])//создоем новый массив и забираем элементы с помощю ... из старого  массиваи добавляем нью пост\n});case SET_STATUS:return _objectSpread(_objectSpread({},state),{},{status:action.status});case SET_USER_PROFILE:return _objectSpread(_objectSpread({},state),{},{profile:action.profile});case DELETE_POST:return _objectSpread(_objectSpread({},state),{},{posts:state.posts.filter(function(p){return p.id!=action.postId;})});}return state;};export var addPostActionCreator=function addPostActionCreator(newPostText){return{type:ADD_POST,newPostText:newPostText};};export var setUsersProfile=function setUsersProfile(profile){return{type:SET_USER_PROFILE,profile:profile};};export var setStatus=function setStatus(status){return{type:SET_STATUS,status:status};};export var deletePost=function deletePost(postId){return{type:DELETE_POST,postId:postId};};export var getUsersProfile=function getUsersProfile(userId){return function(diapatch){userAPI.getProfile(userId).then(function(response){diapatch(setUsersProfile(response.data));});};};export var getStatus=function getStatus(userId){return function(diapatch){profileAPI.getStatus(userId).then(function(response){diapatch(setStatus(response.data));});};};export var updateStatus=function updateStatus(status){return function(diapatch){profileAPI.updateStatus(status)//мы статус закидываем на сервер, если он добавился прийдет ответ 0 и мы добавим его в стате\n.then(function(response){if(response.data.resultCode===0){diapatch(setStatus(status));}});};};export default ProfileReducer;","map":{"version":3,"sources":["C:/Users/lnc/WebstormProjects/untitled1/src/redux/profile-reducer.js"],"names":["profileAPI","userAPI","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","initialState","posts","id","message","profile","status","ProfileReducer","state","action","type","newPostText","filter","p","postId","addPostActionCreator","setUsersProfile","setStatus","deletePost","getUsersProfile","userId","diapatch","getProfile","then","response","data","getStatus","updateStatus","resultCode"],"mappings":"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","sourcesContent":["import {profileAPI, userAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'hi'},\r\n        {id: 2, message: 'ho'}\r\n    ],\r\n    profile: null,\r\n    status: '',\r\n};\r\n\r\nconst ProfileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,// создоем stateCopy и копируем в него  state (поверхносно)\r\n                newPostText: '',//затираем\r\n                posts: [...state.posts, {id: 3, message: action.newPostText}]//создоем новый массив и забираем элементы с помощю ... из старого  массиваи добавляем нью пост\r\n            }\r\n\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: action.profile}\r\n\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n    }\r\n    return state;\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => {\r\n    return {\r\n        type: ADD_POST, newPostText\r\n    }\r\n}\r\nexport const setUsersProfile = (profile) => {\r\n    return {\r\n        type: SET_USER_PROFILE, profile\r\n    }\r\n}\r\nexport const setStatus = (status) => {\r\n    return {\r\n        type: SET_STATUS, status\r\n    }\r\n}\r\nexport const deletePost = (postId) => {\r\n    return {\r\n        type: DELETE_POST, postId\r\n    }\r\n}\r\n\r\nexport const getUsersProfile = (userId) => (diapatch) => {\r\n    userAPI.getProfile(userId).then(response => {\r\n        diapatch(setUsersProfile(response.data));\r\n    });\r\n}\r\n\r\n\r\nexport const getStatus = (userId) => (diapatch) => {\r\n    profileAPI.getStatus(userId).then(response => {\r\n        diapatch(setStatus(response.data));\r\n    });\r\n}\r\n\r\nexport const updateStatus = (status) => (diapatch) => {\r\n    profileAPI.updateStatus(status) //мы статус закидываем на сервер, если он добавился прийдет ответ 0 и мы добавим его в стате\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                diapatch(setStatus(status));\r\n            }\r\n        });\r\n}\r\n\r\nexport default ProfileReducer;"]},"metadata":{},"sourceType":"module"}