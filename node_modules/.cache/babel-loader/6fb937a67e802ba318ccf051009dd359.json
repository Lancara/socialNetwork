{"ast":null,"code":"import React from'react';import PostCar from\"./PostCar/PostCar\";import{Field,reduxForm}from\"redux-form\";import{maxLengthCreator,required}from\"../../utils/validators/validators\";import{Textarea}from\"../Common/FormsControls/FormsControls\";import{Redirect}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Car=function Car(props){if(!props.isAuth)return/*#__PURE__*/_jsx(Redirect,{to:\"/login\"});var postElements3=props.messagesCar.map(function(p){return/*#__PURE__*/_jsx(PostCar,{message:p.message});});var newPostElement=/*#__PURE__*/React.createRef();var addPost=function addPost(values){props.addPost(values.newPostCar);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(AddNewPostCarFormRedux,{onSubmit:addPost}),/*#__PURE__*/_jsx(\"div\",{children:postElements3})]});};var maxLength50=maxLengthCreator(50);var addNewPost=function addNewPost(props){return/*#__PURE__*/_jsxs(\"form\",{onSubmit:props.handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Field,{name:\"newPostCar\",component:Textarea,validate:[required,maxLength50]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{children:\"Add post\"})})]});};var AddNewPostCarFormRedux=reduxForm({form:\"CarAddNewPostForm\"})(addNewPost);export default Car;","map":{"version":3,"sources":["C:/Users/lnc/WebstormProjects/untitled1/src/components/Car/Car.jsx"],"names":["React","PostCar","Field","reduxForm","maxLengthCreator","required","Textarea","Redirect","Car","props","isAuth","postElements3","messagesCar","map","p","message","newPostElement","createRef","addPost","values","newPostCar","maxLength50","addNewPost","handleSubmit","AddNewPostCarFormRedux","form"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,OAAQC,KAAR,CAAeC,SAAf,KAA+B,YAA/B,CACA,OAAQC,gBAAR,CAA0BC,QAA1B,KAAyC,mCAAzC,CACA,OAAQC,QAAR,KAAuB,uCAAvB,CACA,OAASC,QAAT,KAAyB,kBAAzB,C,wFAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,CAACC,KAAD,CAAW,CACnB,GAAI,CAACA,KAAK,CAACC,MAAX,CAAmB,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAE,QAAd,EAAP,CAGnB,GAAIC,CAAAA,aAAa,CACbF,KAAK,CAACG,WAAN,CAAkBC,GAAlB,CAAsB,SAAAC,CAAC,qBAAI,KAAC,OAAD,EAAS,OAAO,CAAEA,CAAC,CAACC,OAApB,EAAJ,EAAvB,CADJ,CAGA,GAAIC,CAAAA,cAAc,cAAGhB,KAAK,CAACiB,SAAN,EAArB,CAEA,GAAIC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,MAAD,CAAY,CACtBV,KAAK,CAACS,OAAN,CAAcC,MAAM,CAACC,UAArB,EACH,CAFD,CAIA,mBACI,oCACI,KAAC,sBAAD,EAAwB,QAAQ,CAAEF,OAAlC,EADJ,cAEI,qBACKP,aADL,EAFJ,GADJ,CAQH,CArBD,CAsBA,GAAMU,CAAAA,WAAW,CAAGjB,gBAAgB,CAAC,EAAD,CAApC,CAEA,GAAMkB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACb,KAAD,CAAW,CAC1B,mBACI,cAAM,QAAQ,CAAEA,KAAK,CAACc,YAAtB,wBACI,kCACI,KAAC,KAAD,EAAO,IAAI,CAAC,YAAZ,CAAyB,SAAS,CAAEjB,QAApC,CACO,QAAQ,CAAE,CAACD,QAAD,CAAWgB,WAAX,CADjB,EADJ,EADJ,cAKI,kCACI,oCADJ,EALJ,GADJ,CAWH,CAZD,CAcA,GAAIG,CAAAA,sBAAsB,CAAGrB,SAAS,CAAC,CAACsB,IAAI,CAAE,mBAAP,CAAD,CAAT,CAAuCH,UAAvC,CAA7B,CAGA,cAAed,CAAAA,GAAf","sourcesContent":["import React from 'react';\r\nimport PostCar from \"./PostCar/PostCar\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../Common/FormsControls/FormsControls\";\r\nimport { Redirect } from \"react-router-dom\"\r\n\r\nconst Car = (props) => {\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} /> ;\r\n\r\n\r\n    let postElements3 =\r\n        props.messagesCar.map(p => <PostCar message={p.message}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let addPost = (values) => {\r\n        props.addPost(values.newPostCar);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <AddNewPostCarFormRedux onSubmit={addPost}/>\r\n            <div>\r\n                {postElements3}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst addNewPost = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newPostCar\" component={Textarea}\r\n                       validate={[required, maxLength50]} />\r\n            </div>\r\n            <div>\r\n                <button >Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddNewPostCarFormRedux = reduxForm({form: \"CarAddNewPostForm\"})(addNewPost);\r\n\r\n\r\nexport default Car;"]},"metadata":{},"sourceType":"module"}