{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lnc\\\\WebstormProjects\\\\untitled1\\\\src\\\\components\\\\Login\\\\Login.jsx\";\nimport React from 'react';\nimport { Field, reduxForm } from \"redux-form\";\nimport { Input } from \"../Common/FormsControls/FormsControls\";\nimport { required } from \"../../utils/validators/validators\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../redux/auth-reducer\";\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        placeholder: \"Email\",\n        name: \"email\",\n        validate: [required],\n        component: Input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        placeholder: \"Password\",\n        name: \"password\",\n        type: \"password\",\n        validate: [required],\n        component: Input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        component: Input,\n        name: \"rememberMe\",\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), \" remember me\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), captchaUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: captchaUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_c = LoginForm;\nconst LoginReduxForm = reduxForm({\n  form: 'login' // уникальное строковое имя , что бі стейт различал разніе формі\n\n})(LoginForm); // вокруг чего обворачиваем\n\n_c2 = LoginReduxForm;\n\nconst Login = props => {\n  const onSubmit = formData => {\n    //  в formData сидят методы из сабмита которые он получает из библиотеки редакс-форм мы их прокидываем дальше в нашу компоненту\n    props.login(formData.email, formData.password, formData.rememderMe);\n  };\n\n  if (props.isAuth) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LoginReduxForm, {\n      onSubmit: onSubmit,\n      captchaUrl: props.captchaUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = Login;\n\nconst mapStateToProps = state => ({\n  captchaUrl: state.auth.captchaUrl,\n  isAuth: state.auth.isAuth\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"LoginForm\");\n$RefreshReg$(_c2, \"LoginReduxForm\");\n$RefreshReg$(_c3, \"Login\");","map":{"version":3,"sources":["C:/Users/lnc/WebstormProjects/untitled1/src/components/Login/Login.jsx"],"names":["React","Field","reduxForm","Input","required","connect","login","Redirect","LoginForm","props","handleSubmit","captchaUrl","LoginReduxForm","form","Login","onSubmit","formData","email","password","rememderMe","isAuth","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,SAAf,QAA+B,YAA/B;AACA,SAAQC,KAAR,QAAoB,uCAApB;AACA,SAAQC,QAAR,QAAuB,mCAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,KAAR,QAAoB,0BAApB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AACzB,sBACI;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACC,YAAtB;AAAA,4BACI;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,WAAW,EAAE,OAApB;AAA6B,QAAA,IAAI,EAAE,OAAnC;AACO,QAAA,QAAQ,EAAE,CAACN,QAAD,CADjB;AAEO,QAAA,SAAS,EAAED;AAFlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,WAAW,EAAE,UAApB;AAAgC,QAAA,IAAI,EAAE,UAAtC;AAAkD,QAAA,IAAI,EAAE,UAAxD;AACO,QAAA,QAAQ,EAAE,CAACC,QAAD,CADjB;AAEO,QAAA,SAAS,EAAED;AAFlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ,eAWI;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,SAAS,EAAEA,KAAlB;AAAyB,QAAA,IAAI,EAAE,YAA/B;AAA6C,QAAA,IAAI,EAAE;AAAnD;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ,eAgBI;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAhBJ,EAmBKQ,UAAU,iBAAI;AAAK,MAAA,GAAG,EAAEA;AAAV;AAAA;AAAA;AAAA;AAAA,YAnBnB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CAxBD;;KAAMH,S;AA0BN,MAAMI,cAAc,GAAGV,SAAS,CAAC;AAC7BW,EAAAA,IAAI,EAAE,OADuB,CACf;;AADe,CAAD,CAAT,CAEpBL,SAFoB,CAAvB,C,CAEe;;MAFTI,c;;AAIN,MAAME,KAAK,GAAIL,KAAD,IAAW;AACrB,QAAMM,QAAQ,GAAIC,QAAD,IAAc;AAAC;AAC5BP,IAAAA,KAAK,CAACH,KAAN,CAAYU,QAAQ,CAACC,KAArB,EAA4BD,QAAQ,CAACE,QAArC,EAA+CF,QAAQ,CAACG,UAAxD;AACH,GAFD;;AAGA,MAAIV,KAAK,CAACW,MAAV,EAAkB;AACd,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEL,QAA1B;AAAoC,MAAA,UAAU,EAAEN,KAAK,CAACE;AAAtD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAbD;;MAAMG,K;;AAcN,MAAMO,eAAe,GAAIC,KAAD,KAAY;AAChCX,EAAAA,UAAU,EAAEW,KAAK,CAACC,IAAN,CAAWZ,UADS;AAEhCS,EAAAA,MAAM,EAAEE,KAAK,CAACC,IAAN,CAAWH;AAFa,CAAZ,CAAxB;;AAIA,eAAef,OAAO,CAACgB,eAAD,EAAkB;AAACf,EAAAA;AAAD,CAAlB,CAAP,CAAkCQ,KAAlC,CAAf","sourcesContent":["import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../Common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Email\"} name={\"email\"}\r\n                       validate={[required]}\r\n                       component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"} name={\"password\"} type={\"password\"}\r\n                       validate={[required]}\r\n                       component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field component={Input} name={\"rememberMe\"} type={\"checkbox\"}/> remember me\r\n            </div>\r\n\r\n\r\n            <div>\r\n                <button>login</button>\r\n            </div>\r\n            {captchaUrl && <img src={captchaUrl}/>}\r\n        </form>\r\n    );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login' // уникальное строковое имя , что бі стейт различал разніе формі\r\n})(LoginForm); // вокруг чего обворачиваем\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {//  в formData сидят методы из сабмита которые он получает из библиотеки редакс-форм мы их прокидываем дальше в нашу компоненту\r\n        props.login(formData.email, formData.password, formData.rememderMe);\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, {login})(Login);"]},"metadata":{},"sourceType":"module"}