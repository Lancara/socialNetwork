{"ast":null,"code":"let store = {\n  _state: {\n    dialogsData: [{\n      id: 1,\n      name: 'Dima'\n    }, {\n      id: 2,\n      name: 'Andre'\n    }, {\n      id: 3,\n      name: 'Sasha'\n    }],\n    messagesData: [{\n      id: 1,\n      message: 'hi'\n    }, {\n      id: 2,\n      message: 'hi'\n    }, {\n      id: 3,\n      message: 'hi'\n    }, {\n      id: 4,\n      message: 'hi'\n    }],\n    posts: [{\n      id: 1,\n      message: 'hi'\n    }, {\n      id: 2,\n      message: 'ho'\n    }],\n    newPostText: ' re'\n  },\n\n  _callSubscriber() {\n    console.log('state is change');\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n\n  dispatch(action) {\n    if (action.type === 'ADD-POST') {\n      let newPost = {\n        id: 3,\n        message: this._state.newPostText\n        /*likesCount:0*/\n\n      };\n\n      this._state.posts.push(newPost);\n\n      this._state.newPostText = '';\n\n      this._callSubscriber(this._state);\n    } else if (action.type === 'UPDATE-NEW-POST-TEXT') {\n      this._state.newPostText = action.newText;\n\n      this._callSubscriber(this._state);\n    }\n  }\n\n};\nexport const addPostActionCreator = () => {\n  let ADD_POST = 'ADD-POST';\n  return {\n    type: ADD_POST\n  };\n};\nexport const updateNewPostTextActionCreator = text => {\n  return {\n    type: 'UPDATE-NEW-POST-TEXT',\n    newText: text\n  };\n};\nexport default store;\nwindow.state = store;","map":{"version":3,"sources":["C:/Users/lnc/WebstormProjects/untitled1/src/redux/state.js"],"names":["store","_state","dialogsData","id","name","messagesData","message","posts","newPostText","_callSubscriber","console","log","getState","subscribe","observer","dispatch","action","type","newPost","push","newText","addPostActionCreator","ADD_POST","updateNewPostTextActionCreator","text","window","state"],"mappings":"AAAA,IAAIA,KAAK,GAAG;AACRC,EAAAA,MAAM,EAAE;AACJC,IAAAA,WAAW,EAAE,CACT;AAACC,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE;AAAd,KADS,EAET;AAACD,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE;AAAd,KAFS,EAGT;AAACD,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE;AAAd,KAHS,CADT;AAMJC,IAAAA,YAAY,EAAE,CACV;AAACF,MAAAA,EAAE,EAAE,CAAL;AAAQG,MAAAA,OAAO,EAAE;AAAjB,KADU,EAEV;AAACH,MAAAA,EAAE,EAAE,CAAL;AAAQG,MAAAA,OAAO,EAAE;AAAjB,KAFU,EAGV;AAACH,MAAAA,EAAE,EAAE,CAAL;AAAQG,MAAAA,OAAO,EAAE;AAAjB,KAHU,EAIV;AAACH,MAAAA,EAAE,EAAE,CAAL;AAAQG,MAAAA,OAAO,EAAE;AAAjB,KAJU,CANV;AAYJC,IAAAA,KAAK,EAAE,CACH;AAACJ,MAAAA,EAAE,EAAE,CAAL;AAAQG,MAAAA,OAAO,EAAE;AAAjB,KADG,EAEH;AAACH,MAAAA,EAAE,EAAE,CAAL;AAAQG,MAAAA,OAAO,EAAE;AAAjB,KAFG,CAZH;AAgBJE,IAAAA,WAAW,EAAE;AAhBT,GADA;;AAmBRC,EAAAA,eAAe,GAAI;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH,GArBO;;AAuBRC,EAAAA,QAAQ,GAAI;AACR,WAAO,KAAKX,MAAZ;AACH,GAzBO;;AA0BRY,EAAAA,SAAS,CAAEC,QAAF,EAAY;AACjB,SAAKL,eAAL,GAAuBK,QAAvB;AACH,GA5BO;;AA8BRC,EAAAA,QAAQ,CAACC,MAAD,EAAQ;AACZ,QAAIA,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC5B,UAAIC,OAAO,GAAG;AACVf,QAAAA,EAAE,EAAE,CADM;AAEVG,QAAAA,OAAO,EAAE,KAAKL,MAAL,CAAYO;AACrB;;AAHU,OAAd;;AAKA,WAAKP,MAAL,CAAYM,KAAZ,CAAkBY,IAAlB,CAAuBD,OAAvB;;AACA,WAAKjB,MAAL,CAAYO,WAAZ,GAA0B,EAA1B;;AACA,WAAKC,eAAL,CAAqB,KAAKR,MAA1B;AACH,KATD,MASO,IAAIe,MAAM,CAACC,IAAP,KAAgB,sBAApB,EAA2C;AAC9C,WAAKhB,MAAL,CAAYO,WAAZ,GAA0BQ,MAAM,CAACI,OAAjC;;AACA,WAAKX,eAAL,CAAqB,KAAKR,MAA1B;AACH;AACJ;;AA5CO,CAAZ;AA+CA,OAAO,MAAOoB,oBAAoB,GAAG,MAAO;AACxC,MAAIC,QAAQ,GAAG,UAAf;AACA,SAAM;AACFL,IAAAA,IAAI,EAAEK;AADJ,GAAN;AAGH,CALM;AAMP,OAAO,MAAMC,8BAA8B,GAAIC,IAAD,IAAW;AACrD,SAAM;AACFP,IAAAA,IAAI,EAAE,sBADJ;AAC4BG,IAAAA,OAAO,EAAEI;AADrC,GAAN;AAGH,CAJM;AAMP,eAAexB,KAAf;AACAyB,MAAM,CAACC,KAAP,GAAe1B,KAAf","sourcesContent":["let store = {\r\n    _state: {\r\n        dialogsData: [\r\n            {id: 1, name: 'Dima'},\r\n            {id: 2, name: 'Andre'},\r\n            {id: 3, name: 'Sasha'},\r\n        ],\r\n        messagesData: [\r\n            {id: 1, message: 'hi'},\r\n            {id: 2, message: 'hi'},\r\n            {id: 3, message: 'hi'},\r\n            {id: 4, message: 'hi'},\r\n        ],\r\n        posts: [\r\n            {id: 1, message: 'hi'},\r\n            {id: 2, message: 'ho'}\r\n        ],\r\n        newPostText: ' re'\r\n    },\r\n    _callSubscriber () {\r\n        console.log('state is change');\r\n    },\r\n\r\n    getState( ) {\r\n        return this._state;\r\n    },\r\n    subscribe (observer) {\r\n        this._callSubscriber = observer;\r\n    },\r\n\r\n    dispatch(action){\r\n        if (action.type === 'ADD-POST') {\r\n            let newPost = {\r\n                id: 3,\r\n                message: this._state.newPostText,\r\n                /*likesCount:0*/\r\n            };\r\n            this._state.posts.push(newPost);\r\n            this._state.newPostText = ''\r\n            this._callSubscriber(this._state);\r\n        } else if (action.type === 'UPDATE-NEW-POST-TEXT'){\r\n            this._state.newPostText = action.newText;\r\n            this._callSubscriber(this._state);\r\n        }\r\n    }\r\n}\r\n\r\nexport const  addPostActionCreator = () =>  {\r\n    let ADD_POST = 'ADD-POST';\r\n    return{\r\n        type: ADD_POST\r\n    }\r\n}\r\nexport const updateNewPostTextActionCreator = (text) =>  {\r\n    return{\r\n        type: 'UPDATE-NEW-POST-TEXT', newText: text\r\n    }\r\n}\r\n\r\nexport default store;\r\nwindow.state = store;\r\n"]},"metadata":{},"sourceType":"module"}