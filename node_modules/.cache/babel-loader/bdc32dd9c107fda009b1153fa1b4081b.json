{"ast":null,"code":"import profileReducer from \"./profile-reducer\";\nimport CarReducer from \"./car-reducer\";\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst SEND_CAR = 'SEND_CAR';\nconst UPDATE_NEW_MESSAGE_CAR = 'UPDATE_NEW_MESSAGE_CAR';\nlet store = {\n  _state: {\n    dialogsData: [{\n      id: 1,\n      name: 'Dima'\n    }, {\n      id: 2,\n      name: 'Andre'\n    }, {\n      id: 3,\n      name: 'Sasha'\n    }],\n    messagesData: [{\n      id: 1,\n      message: 'hi'\n    }, {\n      id: 2,\n      message: 'hi'\n    }, {\n      id: 3,\n      message: 'hi'\n    }, {\n      id: 4,\n      message: 'hi'\n    }],\n    posts: [{\n      id: 1,\n      message: 'hi'\n    }, {\n      id: 2,\n      message: 'ho'\n    }],\n    messagesCar: [{\n      id: 1,\n      message: 'BMW'\n    }],\n    newPostText: ' re',\n    newMessageBody: ' ',\n    newPostCar: ' '\n  },\n\n  _callSubscriber() {\n    console.log('state is change');\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n\n  dispatch(action) {\n    this._state = profileReducer(this._state, action);\n    this._state = CarReducer(this._state, action);\n\n    this._callSubscriber(this._state);\n  }\n\n};\nexport const addPostActionCreator = () => {\n  return {\n    type: ADD_POST\n  };\n};\nexport const updateNewPostTextActionCreator = text => {\n  return {\n    type: UPDATE_NEW_POST_TEXT,\n    newText: text\n  };\n};\nexport const addPostCarCreator = () => {\n  return {\n    type: SEND_CAR\n  };\n};\nexport const updateNewPostTextCarCreator = newCar => {\n  return {\n    type: UPDATE_NEW_MESSAGE_CAR,\n    newCar: newCar\n  };\n};\nexport default store;\nwindow.state = store;","map":{"version":3,"sources":["C:/Users/lnc/WebstormProjects/untitled1/src/redux/state.js"],"names":["profileReducer","CarReducer","ADD_POST","UPDATE_NEW_POST_TEXT","SEND_CAR","UPDATE_NEW_MESSAGE_CAR","store","_state","dialogsData","id","name","messagesData","message","posts","messagesCar","newPostText","newMessageBody","newPostCar","_callSubscriber","console","log","getState","subscribe","observer","dispatch","action","addPostActionCreator","type","updateNewPostTextActionCreator","text","newText","addPostCarCreator","updateNewPostTextCarCreator","newCar","window","state"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,mBAA3B;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,oBAAoB,GAAG,sBAA7B;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,sBAAsB,GAAG,wBAA/B;AAEA,IAAIC,KAAK,GAAG;AACRC,EAAAA,MAAM,EAAE;AACJC,IAAAA,WAAW,EAAE,CACT;AAACC,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE;AAAd,KADS,EAET;AAACD,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE;AAAd,KAFS,EAGT;AAACD,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE;AAAd,KAHS,CADT;AAMJC,IAAAA,YAAY,EAAE,CACV;AAACF,MAAAA,EAAE,EAAE,CAAL;AAAQG,MAAAA,OAAO,EAAE;AAAjB,KADU,EAEV;AAACH,MAAAA,EAAE,EAAE,CAAL;AAAQG,MAAAA,OAAO,EAAE;AAAjB,KAFU,EAGV;AAACH,MAAAA,EAAE,EAAE,CAAL;AAAQG,MAAAA,OAAO,EAAE;AAAjB,KAHU,EAIV;AAACH,MAAAA,EAAE,EAAE,CAAL;AAAQG,MAAAA,OAAO,EAAE;AAAjB,KAJU,CANV;AAYJC,IAAAA,KAAK,EAAE,CACH;AAACJ,MAAAA,EAAE,EAAE,CAAL;AAAQG,MAAAA,OAAO,EAAE;AAAjB,KADG,EAEH;AAACH,MAAAA,EAAE,EAAE,CAAL;AAAQG,MAAAA,OAAO,EAAE;AAAjB,KAFG,CAZH;AAgBJE,IAAAA,WAAW,EAAE,CACT;AAACL,MAAAA,EAAE,EAAE,CAAL;AAAQG,MAAAA,OAAO,EAAE;AAAjB,KADS,CAhBT;AAmBJG,IAAAA,WAAW,EAAE,KAnBT;AAoBJC,IAAAA,cAAc,EAAE,GApBZ;AAqBJC,IAAAA,UAAU,EAAE;AArBR,GADA;;AAyBRC,EAAAA,eAAe,GAAG;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH,GA3BO;;AA4BRC,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKd,MAAZ;AACH,GA9BO;;AA+BRe,EAAAA,SAAS,CAACC,QAAD,EAAW;AAChB,SAAKL,eAAL,GAAuBK,QAAvB;AACH,GAjCO;;AAmCRC,EAAAA,QAAQ,CAACC,MAAD,EAAS;AAEb,SAAKlB,MAAL,GAAcP,cAAc,CAAC,KAAKO,MAAN,EAAckB,MAAd,CAA5B;AACA,SAAKlB,MAAL,GAAcN,UAAU,CAAC,KAAKM,MAAN,EAAckB,MAAd,CAAxB;;AAEA,SAAKP,eAAL,CAAqB,KAAKX,MAA1B;AAEH;;AA1CO,CAAZ;AA6CA,OAAO,MAAMmB,oBAAoB,GAAG,MAAM;AACtC,SAAO;AACHC,IAAAA,IAAI,EAAEzB;AADH,GAAP;AAGH,CAJM;AAKP,OAAO,MAAM0B,8BAA8B,GAAIC,IAAD,IAAU;AACpD,SAAO;AAACF,IAAAA,IAAI,EAAExB,oBAAP;AAA6B2B,IAAAA,OAAO,EAAED;AAAtC,GAAP;AACH,CAFM;AAIP,OAAO,MAAME,iBAAiB,GAAG,MAAM;AACnC,SAAO;AACHJ,IAAAA,IAAI,EAAEvB;AADH,GAAP;AAGH,CAJM;AAKP,OAAO,MAAM4B,2BAA2B,GAAIC,MAAD,IAAY;AACnD,SAAO;AAACN,IAAAA,IAAI,EAAEtB,sBAAP;AAA+B4B,IAAAA,MAAM,EAAEA;AAAvC,GAAP;AACH,CAFM;AAKP,eAAe3B,KAAf;AACA4B,MAAM,CAACC,KAAP,GAAe7B,KAAf","sourcesContent":["import profileReducer from \"./profile-reducer\";\r\nimport CarReducer from \"./car-reducer\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\n\r\nconst SEND_CAR = 'SEND_CAR';\r\nconst UPDATE_NEW_MESSAGE_CAR = 'UPDATE_NEW_MESSAGE_CAR';\r\n\r\nlet store = {\r\n    _state: {\r\n        dialogsData: [\r\n            {id: 1, name: 'Dima'},\r\n            {id: 2, name: 'Andre'},\r\n            {id: 3, name: 'Sasha'},\r\n        ],\r\n        messagesData: [\r\n            {id: 1, message: 'hi'},\r\n            {id: 2, message: 'hi'},\r\n            {id: 3, message: 'hi'},\r\n            {id: 4, message: 'hi'},\r\n        ],\r\n        posts: [\r\n            {id: 1, message: 'hi'},\r\n            {id: 2, message: 'ho'}\r\n        ],\r\n        messagesCar: [\r\n            {id: 1, message: 'BMW'},\r\n        ],\r\n        newPostText: ' re',\r\n        newMessageBody: ' ',\r\n        newPostCar: ' ',\r\n\r\n    },\r\n    _callSubscriber() {\r\n        console.log('state is change');\r\n    },\r\n    getState() {\r\n        return this._state;\r\n    },\r\n    subscribe(observer) {\r\n        this._callSubscriber = observer;\r\n    },\r\n\r\n    dispatch(action) {\r\n\r\n        this._state = profileReducer(this._state, action);\r\n        this._state = CarReducer(this._state, action);\r\n\r\n        this._callSubscriber(this._state);\r\n\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = () => {\r\n    return {\r\n        type: ADD_POST\r\n    }\r\n}\r\nexport const updateNewPostTextActionCreator = (text) => {\r\n    return {type: UPDATE_NEW_POST_TEXT, newText: text}\r\n}\r\n\r\nexport const addPostCarCreator = () => {\r\n    return {\r\n        type: SEND_CAR\r\n    }\r\n}\r\nexport const updateNewPostTextCarCreator = (newCar) => {\r\n    return {type: UPDATE_NEW_MESSAGE_CAR, newCar: newCar}\r\n}\r\n\r\n\r\nexport default store;\r\nwindow.state = store;\r\n"]},"metadata":{},"sourceType":"module"}