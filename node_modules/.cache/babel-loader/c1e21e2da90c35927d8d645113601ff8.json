{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lnc\\\\WebstormProjects\\\\untitled1\\\\src\\\\components\\\\Profile\\\\ProfileInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Infinity from \"../Common/Infinity/Infinity\";\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\nimport userPhoto from \"../../assets/images/user.png\";\nimport stile from './ProfileInfo.module.css';\nimport ProfileDataForm from \"./ProfileDataForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileInfo = props => {\n  _s();\n\n  let [editMode, setEditMode] = useState(false);\n\n  if (!props.profile) {\n    return /*#__PURE__*/_jsxDEV(Infinity, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }, this);\n  }\n\n  const onMainPhotoSelected = e => {\n    if (e.target.files.length) {\n      // если длина массива больше 0 то тру\n      props.savePhoto(e.target.files[0]); // выз колбек\n    }\n  };\n\n  const onSubmit = formData => {//  в formData сидят методы из сабмита которые он получает из библиотеки редакс-форм мы их прокидываем дальше в нашу компоненту\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.profile.photos.large || userPhoto,\n        className: stile.userPhoto\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: props.isOwner && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: onMainPhotoSelected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), editMode ? /*#__PURE__*/_jsxDEV(ProfileDataForm, {\n        profile: props.profile,\n        onSubmit: onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(ProfileData, {\n        goToEditMode: () => {\n          setEditMode(true);\n        },\n        profile: props.profile,\n        isOwner: props.isOwner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(ProfileStatusWithHooks, {\n        status: props.status,\n        updateStatus: props.updateStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProfileInfo, \"rVR9Tx2gSsa7LZkJIG7mlWuXVu0=\");\n\n_c = ProfileInfo;\n\nconst ProfileData = _ref => {\n  let {\n    profile,\n    isOwner,\n    goToEditMode\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isOwner && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToEditMode,\n        children: \"edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \" Full name \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), \": \", profile.fullName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \" Looking for a job \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), \": \", profile.lookingForAJob ? \"yes\" : \"no\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), profile.lookingForAJob && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"My professional skills\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), \": \", profile.lookingForAJobDescription]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \" About me \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), \" : \", profile.aboutMe]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \" Contacts \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), \" : \", Object.keys(profile.contacts).map(key => {\n        //Метод Object.keys() возвращает массив из собственных перечисляемых свойств, пробегаемся по ключам и мапим\n        return /*#__PURE__*/_jsxDEV(Contact, {\n          contactTitle: key,\n          contactValue: profile.contacts[key]\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 20\n        }, this); // key={key} / contactTitle={key} и есть ключ, contacts[key] через квадратные скобки прочитали свойство\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 12\n  }, this);\n};\n\n_c2 = ProfileData;\n\nconst Contact = _ref2 => {\n  let {\n    contactTitle,\n    contactValue\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: stile.contact,\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      children: contactTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 43\n    }, this), \": \", contactValue]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 12\n  }, this);\n};\n\n_c3 = Contact;\nexport default ProfileInfo;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ProfileInfo\");\n$RefreshReg$(_c2, \"ProfileData\");\n$RefreshReg$(_c3, \"Contact\");","map":{"version":3,"sources":["C:/Users/lnc/WebstormProjects/untitled1/src/components/Profile/ProfileInfo.jsx"],"names":["React","useState","Infinity","ProfileStatus","ProfileStatusWithHooks","userPhoto","stile","ProfileDataForm","ProfileInfo","props","editMode","setEditMode","profile","onMainPhotoSelected","e","target","files","length","savePhoto","onSubmit","formData","photos","large","isOwner","status","updateStatus","ProfileData","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","map","key","Contact","contactTitle","contactValue","contact"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport Infinity from \"../Common/Infinity/Infinity\";\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport stile from './ProfileInfo.module.css'\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!props.profile) {\r\n        return <Infinity/>\r\n    }\r\n\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) { // если длина массива больше 0 то тру\r\n            props.savePhoto(e.target.files[0]);// выз колбек\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {//  в formData сидят методы из сабмита которые он получает из библиотеки редакс-форм мы их прокидываем дальше в нашу компоненту\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src={props.profile.photos.large || userPhoto} className={stile.userPhoto}/>\r\n                <div>{props.isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}</div>\r\n                {editMode\r\n                    ? <ProfileDataForm profile={props.profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData goToEditMode={() => {setEditMode(true)}} profile={props.profile} isOwner={props.isOwner} />}\r\n\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n        {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\r\n        <div>\r\n            <b> Full name </b>: {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b> Looking for a job </b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n            <div>\r\n                <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n            </div>\r\n        }\r\n        <div>\r\n            <b> About me </b> : {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b> Contacts </b> : {Object.keys(profile.contacts).map(key => {//Метод Object.keys() возвращает массив из собственных перечисляемых свойств, пробегаемся по ключам и мапим\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>// key={key} / contactTitle={key} и есть ключ, contacts[key] через квадратные скобки прочитали свойство\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={stile.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;"]},"metadata":{},"sourceType":"module"}