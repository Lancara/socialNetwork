{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lnc\\\\WebstormProjects\\\\untitled1\\\\src\\\\components\\\\Users\\\\UsersContainer.jsx\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { followAC, unfollowAC, setUsersAC, setCurrentPageAC, setUsersTotalCountAC, toggleIsFetchingAC } from \"../../redux/users-reducer\";\nimport axios from \"axios\";\nimport Users from \"./users\";\nimport Infinity from '../../assets/images/Infinity.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UsersContainer extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      this.props.toggleIsFetching(true);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        this.props.setUsers(response.data.items);\n        this.props.toggleIsFetching(false);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Infinity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 38\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        onPageChanged: this.onPageChanged,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow,\n        users: this.props.users\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    follow: userID => {\n      dispatch(followAC(userID));\n    },\n    unfollow: userID => {\n      dispatch(unfollowAC(userID));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    },\n    setCurrentPage: pageNumber => {\n      dispatch(setCurrentPageAC(pageNumber));\n    },\n    setTotalUsersCount: totalCount => {\n      dispatch(setUsersTotalCountAC(totalCount));\n    },\n    toggleIsFetching: isFetching => {\n      dispatch(toggleIsFetchingAC(isFetching));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);","map":{"version":3,"sources":["C:/Users/lnc/WebstormProjects/untitled1/src/components/Users/UsersContainer.jsx"],"names":["React","connect","followAC","unfollowAC","setUsersAC","setCurrentPageAC","setUsersTotalCountAC","toggleIsFetchingAC","axios","Users","Infinity","UsersContainer","Component","onPageChanged","pageNumber","props","setCurrentPage","toggleIsFetching","get","pageSize","then","response","setUsers","data","items","componentDidMount","currentPage","setTotalUsersCount","totalCount","render","isFetching","totalUsersCount","follow","unfollow","users","mapStateToProps","state","usersPage","mapDispatchToProps","dispatch","userID"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    followAC,\r\n    unfollowAC,\r\n    setUsersAC,\r\n    setCurrentPageAC,\r\n    setUsersTotalCountAC,\r\n    toggleIsFetchingAC\r\n} from \"../../redux/users-reducer\";\r\nimport axios from \"axios\";\r\nimport Users from \"./users\";\r\nimport Infinity from '../../assets/images/Infinity.svg';\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                this.props.toggleIsFetching(false);\r\n                this.props.setUsers(response.data.items);\r\n                this.props.setTotalUsersCount(response.data.totalCount);\r\n            });\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.toggleIsFetching(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                this.props.setUsers(response.data.items);\r\n                this.props.toggleIsFetching(false);\r\n\r\n            });\r\n    }\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <img src={Infinity}/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                      pageSize={this.props.pageSize}\r\n                      currentPage={this.props.currentPage}\r\n                      onPageChanged={this.onPageChanged}\r\n                      follow={this.props.follow}\r\n                      unfollow={this.props.unfollow}\r\n                      users={this.props.users}\r\n        />\r\n            </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize:state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching:state.usersPage.isFetching,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        follow: (userID) => {\r\n            dispatch(followAC(userID));\r\n        },\r\n        unfollow: (userID) => {\r\n            dispatch(unfollowAC(userID));\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users));\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPageAC(pageNumber))\r\n        },\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(setUsersTotalCountAC(totalCount))\r\n        },\r\n        toggleIsFetching: (isFetching) => {\r\n            dispatch(toggleIsFetchingAC(isFetching))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);"]},"metadata":{},"sourceType":"module"}