{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lnc\\\\WebstormProjects\\\\untitled1\\\\src\\\\components\\\\Login\\\\Login.jsx\";\nimport React from 'react';\nimport { Field, reduxForm } from \"redux-form\";\nimport { createField, Input, Textarea } from \"../Common/FormsControls/FormsControls\";\nimport { required } from \"../../utils/validators/validators\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../redux/auth-reducer\";\nimport { Redirect } from \"react-router-dom\";\nimport classes from \"./Login.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        className: classes.loginEmail,\n        placeholder: \"Email\",\n        name: \"email\",\n        validate: [required],\n        component: Input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        className: classes.loginPassword,\n        placeholder: \"Password\",\n        name: \"password\",\n        type: \"password\",\n        validate: [required],\n        component: Input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        className: classes.loginCheckbox,\n        component: Input,\n        name: \"rememberMe\",\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), \" Remember me\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.loginButton,\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), props.captchaUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: props.captchaUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 34\n    }, this), props.captchaUrl && createField(\"Symbols from image\", \"captcha\", [required], Input, {})]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_c = LoginForm;\nconst LoginReduxForm = reduxForm({\n  form: 'login' // уникальное строковое имя , что бі стейт различал разніе формі\n\n})(LoginForm); // вокруг чего обворачиваем\n\n_c2 = LoginReduxForm;\n\nconst Login = props => {\n  const onSubmit = formData => {\n    //  в formData сидят методы из сабмита которые он получает из библиотеки редакс-форм мы их прокидываем дальше в нашу компоненту\n    props.login(formData.email, formData.password, formData.rememderMe, formData.captcha);\n  };\n\n  if (props.isAuth) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: classes.loginTitle,\n      children: \"login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LoginReduxForm, {\n      onSubmit: onSubmit,\n      captchaUrl: props.captchaUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = Login;\n\nconst mapStateToProps = state => ({\n  captchaUrl: state.auth.captchaUrl,\n  isAuth: state.auth.isAuth\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"LoginForm\");\n$RefreshReg$(_c2, \"LoginReduxForm\");\n$RefreshReg$(_c3, \"Login\");","map":{"version":3,"sources":["C:/Users/lnc/WebstormProjects/untitled1/src/components/Login/Login.jsx"],"names":["React","Field","reduxForm","createField","Input","Textarea","required","connect","login","Redirect","classes","LoginForm","props","handleSubmit","loginEmail","loginPassword","loginCheckbox","loginButton","captchaUrl","LoginReduxForm","form","Login","onSubmit","formData","email","password","rememderMe","captcha","isAuth","loginTitle","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input, Textarea} from \"../Common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport classes from \"./Login.module.css\";\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field className={classes.loginEmail} placeholder={\"Email\"} name={\"email\"}\r\n                       validate={[required]}\r\n                       component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field className={classes.loginPassword} placeholder={\"Password\"} name={\"password\"} type={\"password\"}\r\n                       validate={[required]}\r\n                       component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field className={classes.loginCheckbox} component={Input} name={\"rememberMe\"} type={\"checkbox\"}/> Remember me\r\n            </div>\r\n\r\n\r\n            <div>\r\n                <button className={classes.loginButton}>login</button>\r\n            </div>\r\n            {props.captchaUrl && <img src={props.captchaUrl}/>}\r\n            {props.captchaUrl &&  createField(\"Symbols from image\", \"captcha\", [required], Input, {})}\r\n\r\n        </form>\r\n    );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login' // уникальное строковое имя , что бі стейт различал разніе формі\r\n})(LoginForm); // вокруг чего обворачиваем\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {//  в formData сидят методы из сабмита которые он получает из библиотеки редакс-форм мы их прокидываем дальше в нашу компоненту\r\n        props.login(formData.email, formData.password, formData.rememderMe, formData.captcha);\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1 className={classes.loginTitle}>login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, {login})(Login);"]},"metadata":{},"sourceType":"module"}